[
{
	"uri": "//localhost:1313/vi/2-setupenvironment/2.1-cloudformation/",
	"title": "Giả lập môi trường bằng CloudFormation",
	"tags": [],
	"description": "",
	"content": "\rAWS CloudFormation là dịch vụ giúp bạn thiết lập tài nguyên AWS để bạn có thể dành ít thời gian hơn cho việc quản lý các tài nguyên đó và có nhiều thời gian hơn để tập trung vào các ứng dụng chạy trong AWS. Bạn tạo một mẫu mô tả tất cả tài nguyên AWS mà bạn muốn (như Amazon EC2 hoặc Amazon RDS DB) và CloudFormation sẽ đảm nhiệm việc cung cấp và đặt cấu hình các tài nguyên đó cho bạn. Đọc thêm về AWS CloudFormation.\nTải về CloudFormation template\nChúng ta sẽ tạo môi trường bằng cách sử dụng mẫu CloudFormation đã chuẩn bị sẵn. Mẫu này sẽ tạo một VPC có khối CIDR được chỉ định, hỗ trợ DNS, bật tên máy chủ DNS và bao gồm các thành phần này bên trong:\n3 máy ảo EC2 và nhóm bảo mật Vai trò IAM \u0026ldquo;SSMInstanceRole\u0026rdquo; được tạo bằng các chính sách cấp quyền cho nhiều hành động khác nhau liên quan đến Trình quản lý hệ thống (SSM), CloudWatch, S3, EC2, GuardDuty và các dịch vụ khác. 1 Public Subnet được tạo trong VPC với khối CIDR được chỉ định và được cấu hình để gán địa chỉ IP public cho các phiên bản được khởi chạy trong mạng con này. 1 Internet Gateway (IGW) được tạo và gắn vào VPC để cho phép truy cập internet cho các instance trong mạng con công cộng. 1 Route Table được tạo cho subnet công cộng để định tuyến lưu lượng truy cập tới cổng internet. Một Tuyến được thêm vào bảng tuyến công cộng để hướng tất cả lưu lượng truy cập (0.0.0.0/0) đến cổng internet. Nếu tham số \u0026ldquo;EnableGuardDuty\u0026rdquo; được đặt thành \u0026ldquo;Yes-Enable GuardDuty\u0026rdquo;, trình phát hiện GuardDuty sẽ được tạo với tần suất xuất bản phát hiện được chỉ định. Đi tới Bảng điều khiển quản lý AWS Tìm kiếm CloudFormation Chọn CloudFormation Trong bảng điều khiển CloudFormation Nhấn nút Create để tạo mới. Chọn các tùy chọn như hình bên dưới. Upload AutomatedIncidentResponseWorkshop.json mà bạn vừa tải xuống. Bấm tiếp. Trong trang Specify stack details Nhập AutomatedIncidentResponseWorkshop làm tên của ngăn xếp. Kích hoạt GuardDuty. Bước này rất quan trọng đối với workshop! Bấm tiếp Để mặc định trang tiếp theo và nhấp vào Tiếp theo. Cuộn xuống cuối trang và đánh dấu vào 2 ô trống sau đó chọn Submit. Đợi khoảng 5 phút để môi trường hoàn tất quá trình tạo. "
},
{
	"uri": "//localhost:1313/vi/1-introduction/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Trong bài Lab này, chúng ta sẽ phát triển một cẩm nang ứng phó sự cố tự động và triển khai nó khi phát hiện máy ảo của chúng ta bị xâm phạm.\nKẻ tấn công đã ở bên trong. Chúng đã lợi dụng tính năng chèn Lệnh hệ điều hành trong một ứng dụng hoặc khai thác một lỗ hổng khác và có thể thực thi mã tùy ý trên phiên bản đó. Chúng đã chọn cài đặt Máy khách TOR để truy cập ẩn danh một dịch vụ web trên mạng của họ và báo cáo rằng họ đã thành công trong việc xâm phạm phiên bản. Ngoài ra, chúng sẽ cố gắng thực hiện khai thác bitcoin và kết nối với một địa chỉ IP độc hại đã biết.\nCông việc của chúng ta là định cấu hình các tác vụ khắc phục tự động, mô phỏng các cuộc tấn công đó và phân tích kết quả.\nNội dung Giới thiệu Cấu hình và cài đặt môi trường Thiết lập Hệ thống ứng phó Kiểm tra kết quả Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/",
	"title": "Hệ thống ứng phó sự cố tự động",
	"tags": [],
	"description": "",
	"content": "Tại sao chúng ta cần Hệ thống ứng phó sự cố tự động? Tổng quan Trong thế giới an ninh mạng, sự cố là điều không may mắn có thể xảy ra, giống như virus hoặc tin tặc đột nhập. Khi những sự cố này xảy ra, điều quan trọng là phải hành động nhanh chóng và thông minh để giảm thiểu thiệt hại.\nTuy nhiên, quy trình ứng phó sự cố thủ công truyền thống không phải lúc nào cũng đủ nhanh hoặc đủ tốt. Đây là nơi ứng phó sự cố tự động phát huy khả năng.\nWorkshop này bàn luận về sự cần thiết của hệ thống ứng phó sự cố tự động trong việc tăng cường khả năng phục hồi mạng, giảm thời gian phản hồi và cuối cùng là củng cố các tổ chức chống lại các mối đe dọa mạng mới nổi.\nTrong workshop này, chúng ta sẽ có thêm kiến thức về AWS CloudFormation, EC2, EBS, Lambda, Event Bridge, Duty Guard.\nNội dung Giới thiệu Cấu hình và cài đặt môi trường Thiết lập Hệ thống ứng phó Kiểm tra kết quả Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/3-configureresponse/3.1-rolepolicy/",
	"title": "Tạo IAM Policy and Role",
	"tags": [],
	"description": "",
	"content": " Đi tới Bảng điều khiển AWS Tìm kiếm IAM Chọn nó Trong Bảng điều khiển IAM Chọn Policy Bấm vào nút Create Policy Trong trang Chỉ định quyền Chọn JSON làm Trình chỉnh sửa chính sách Dán các chính sách này vào và nhấn Next {\r\u0026#34;Version\u0026#34;: \u0026#34;2012-10-17\u0026#34;,\r\u0026#34;Statement\u0026#34;: [\r{\r\u0026#34;Sid\u0026#34;: \u0026#34;EC2Snapshot\u0026#34;,\r\u0026#34;Effect\u0026#34;: \u0026#34;Allow\u0026#34;,\r\u0026#34;Action\u0026#34;: [\r\u0026#34;ec2:AuthorizeSecurityGroupIngress\u0026#34;,\r\u0026#34;ec2:Describe*\u0026#34;,\r\u0026#34;logs:CreateLogStream\u0026#34;,\r\u0026#34;ec2:CreateSecurityGroup\u0026#34;,\r\u0026#34;ec2:CreateTags\u0026#34;,\r\u0026#34;ec2:CreateSnapshots\u0026#34;,\r\u0026#34;ec2:CreateSnapshot\u0026#34;,\r\u0026#34;ec2:ModifyInstanceAttribute\u0026#34;,\r\u0026#34;ec2:StopInstances\u0026#34;,\r\u0026#34;logs:CreateLogGroup\u0026#34;,\r\u0026#34;logs:PutLogEvents\u0026#34;\r],\r\u0026#34;Resource\u0026#34;: \u0026#34;*\u0026#34;\r}\r]\r} Chính sách này cấp các quyền khá rộng liên quan đến EC2 và CloudWatch, chẳng hạn như: ec2:AuthorizeSecurityGroupIngress: Được sử dụng để cho phép kết nối đến các nhóm bảo mật EC2. ec2:Describe: Cho phép mô tả (xem thông tin về) các tài nguyên EC2 khác nhau (phiên bản, snapshots, v.v.). logs:CreateLogStream: Quyền tạo một luồng log mới trong CloudWatch Logs. ec2:CreateSecurityGroup: Cho phép tạo nhóm bảo mật trong EC2. ec2:CreateTags: Có thể thêm các nhãn (tags) vào các tài nguyên EC2. ec2:CreateSnapshots: Có thể tạo bản snapshot của các ổ đĩa EBS. ec2:CreateSnapshot: Tạo một snapshot của một ổ đĩa EBS cụ thể. ec2:ModifyInstanceAttribution: Cho phép sửa đổi thuộc tính của máy ảo EC2. ec2:StopInstances: Cho phép tạm dừng máy ảo EC2. logs:CreateLogGroup: Tạo một nhóm log mới trong CloudWatch Logs. logs:PutLogEvents: Đặt các sự kiện log vào một luồng log đã được tạo. Trong trang Xem lại và tạo:\nNhập ec2instance-containment-with-forensics-policy làm tên của Policy. Nhấp vào Tạo chính sách Trong bước tiếp theo này, chúng ta sẽ tạo IAM Role\nChọn Role ở bảng điều khiển bên trái. Bấm vào nút Create role. Trong trang Select trusted entity:\nChọn dịch vụ AWS Chọn Lambda làm ứng dụng Bấm tiếp Trong trang Add permissions:\nTìm ec2instance-containment-with-forensics-policy mà chúng ta vừa tạo. Chọn nó rồi bấm tiếp theo Trong trang Name, review, and create:\nNhập ec2instance-containment-with-forensics-role làm tên của Role. Kéo xuống cuối trang và nhấn Create role. "
},
{
	"uri": "//localhost:1313/vi/3-configureresponse/3.2-createlambda/",
	"title": "Tạo hàm Lambda",
	"tags": [],
	"description": "",
	"content": "\rAWS Lambda là dịch vụ điện toán chạy code của bạn để phản hồi các sự kiện và tự động quản lý tài nguyên điện toán, biến đây trở thành cách nhanh nhất để biến ý tưởng thành ứng dụng hiện đại, sản xuất, serverless. Bạn sắp xếp code của mình thành các hàm Lambda. Dịch vụ Lambda chỉ chạy hàm của bạn khi cần và tự động thay đổi quy mô. Bạn chỉ trả tiền cho thời gian tính toán mà bạn sử dụng (không tính phí khi code của bạn không chạy). Đọc thêm về AWS Lambda.\nChúng ta vừa tạo một IAM Role, bây giờ chúng ta sẽ tạo một hàm Lambda và gắn Role đó vào nó.\nTrong Bảng điều khiển quản lý AWS Tìm kiếm Lambda Chọn nó Tạo hàm Lambda với những thông tin sau: Tên hàm: ec2instance-containment-with-forensics Chọn Python 3.9 làm Runtime Chọn ec2instance-containment-with-forensics-role làm vai trò thực thi Bấm vào nút Create function Trong bảng thông tin Lambda: Đi xuống Configuration -\u0026gt; General configuration Chỉnh sửa Timeout thành 15 phút Chọn cài đặt Environment variables, sau đó thêm mục này. Key: IsolatedSG Giá trị: ID nhóm bảo mật bạn đã lưu ở bước 2.2.4 "
},
{
	"uri": "//localhost:1313/vi/2-setupenvironment/2.2-securitygroup/",
	"title": "Tạo Nhóm bảo mật",
	"tags": [],
	"description": "",
	"content": "\rNhóm bảo mật kiểm soát lưu lượng truy cập được phép truy cập và rời khỏi các tài nguyên được liên kết với nó. Ví dụ: sau khi bạn liên kết một nhóm bảo mật với một máy ảo EC2, nhóm đó sẽ kiểm soát lưu lượng vào và ra của máy ảo đó. Đọc thêm\nThông tin cơ bản về quy tắc nhóm bảo mật\nBạn có thể chỉ định quy tắc cho phép nhưng không thể chỉ định quy tắc từ chối. Khi bạn tạo nhóm bảo mật lần đầu tiên, nó không có quy tắc gửi đến. Do đó, không cho phép lưu lượng truy cập vào cho đến khi bạn thêm quy tắc gửi đến vào nhóm bảo mật. Khi bạn tạo nhóm bảo mật lần đầu tiên, nó có quy tắc gửi đi cho phép tất cả lưu lượng truy cập gửi đi từ tài nguyên. Bạn có thể xóa quy tắc và thêm các quy tắc đi chỉ cho phép lưu lượng truy cập đi cụ thể. Nếu nhóm bảo mật của bạn không có quy tắc gửi đi thì không được phép lưu lượng truy cập gửi đi. Khi bạn liên kết nhiều nhóm bảo mật với một tài nguyên, các quy tắc từ mỗi nhóm bảo mật sẽ được tổng hợp để tạo thành một bộ quy tắc duy nhất được sử dụng để xác định xem có cho phép truy cập hay không. Khi bạn thêm, cập nhật hoặc xóa quy tắc, các thay đổi của bạn sẽ tự động được áp dụng cho tất cả các tài nguyên được liên kết với nhóm bảo mật. Hiệu quả của một số thay đổi quy tắc có thể phụ thuộc vào cách theo dõi lưu lượng truy cập. Để biết thêm thông tin, hãy xem Theo dõi kết nối trong Hướng dẫn sử dụng Amazon EC2 dành cho phiên bản Linux. Khi bạn tạo quy tắc nhóm bảo mật, AWS sẽ gán một ID duy nhất cho quy tắc đó. Bạn có thể sử dụng ID của quy tắc khi sử dụng API hoặc CLI để sửa đổi hoặc xóa quy tắc. Đi tới Bảng điều khiển quản lý AWS\nTìm EC2 Chọn EC2 Trong màn hình EC2\nTìm Security Groups Chọn Security Groups Trong giao diện Security Groups\nBấm vào Create Security Groups Điền vào các ô\nNhập tên IsolatedSG Điền mô tả Chọn VPC-AutomatedIncidentResponseWorkshop đã được tạo bởi CloudFormation Xóa tất cả các quy tắc Đi (Outbound rules) Thêm mục này vào Inbound Rules: Type: SSH, Source: My IP Bấm vào Create security group Hình ảnh bên dưới cho thấy nhóm Security của Workshop đã được tạo thành công. Bạn sẽ cần sao chép ID nhóm bảo mật và sau đó lưu nó cho bước 3.2.4 . "
},
{
	"uri": "//localhost:1313/vi/2-setupenvironment/",
	"title": "Thiết lập và cấu hình môi trường",
	"tags": [],
	"description": "",
	"content": "Trong chương này, chúng ta sẽ sử dụng AWS CloudFormation để mô phỏng môi trường của Workshop.\nNội dung Giới thiệu Cấu hình và cài đặt môi trường Thiết lập Hệ thống ứng phó Kiểm tra kết quả Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/3-configureresponse/",
	"title": "Cài đặt hệ thống ứng phó",
	"tags": [],
	"description": "",
	"content": "Trong mô-đun này, chúng ta sẽ tạo hàm Lambda có chức năng bảo vệ máy ảo EC2 bị xâm nhập bằng cách cách ly chúng và bật tính năng Ngăn chặn xóa bỏ. Hàm Lambda này được kích hoạt bởi các quy tắc của Event Bridges nếu chúng khớp với bất kỳ phát hiện CWE nào được tìm thấy bởi Guard Duty. Nội dung Giới thiệu Cấu hình và cài đặt môi trường Thiết lập Hệ thống ứng phó Kiểm tra kết quả Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/3-configureresponse/3.3-testlambda/",
	"title": "Chạy thử hàm Lambda",
	"tags": [],
	"description": "",
	"content": "Sau khi cấu hình hàm Lambda thành công, chúng ta sẽ kiểm thử nó.\nTìm phần Code, dán đoạn code này vào và bấm Deploy: import boto3, json\rimport time\rfrom datetime import date\rfrom botocore.exceptions import ClientError\rimport os\rdef lambda_handler(event, context):\rresponse = \u0026#39;Error remediating the security finding.\u0026#39;\rtry:\r# Gather Instance ID from CloudWatch event\rinstanceID = event[\u0026#39;detail\u0026#39;][\u0026#39;resource\u0026#39;][\u0026#39;instanceDetails\u0026#39;][\u0026#39;instanceId\u0026#39;]\rprint(\u0026#39;## INSTANCE ID: %s\u0026#39; % (instanceID))\r# Get instance details\rclient = boto3.client(\u0026#39;ec2\u0026#39;)\rec2 = boto3.resource(\u0026#39;ec2\u0026#39;)\rinstance = ec2.Instance(instanceID)\rinstance_description = client.describe_instances(InstanceIds=[instanceID])\rprint(\u0026#39;## INSTANCE DESCRIPTION: %s\u0026#39; % (instance_description))\r#-------------------------------------------------------------------\r# Protect instance from termination\r#-------------------------------------------------------------------\rec2.Instance(instanceID).modify_attribute(\rDisableApiTermination={\r\u0026#39;Value\u0026#39;: True\r})\rec2.Instance(instanceID).modify_attribute(\rInstanceInitiatedShutdownBehavior={\r\u0026#39;Value\u0026#39;: \u0026#39;stop\u0026#39;\r})\r#-------------------------------------------------------------------\r# Create tags to avoid accidental deletion of forensics evidence\r#-------------------------------------------------------------------\rec2.create_tags(Resources=[instanceID], Tags=[{\u0026#39;Key\u0026#39;:\u0026#39;status\u0026#39;, \u0026#39;Value\u0026#39;:\u0026#39;isolated\u0026#39;}])\rprint(\u0026#39;## INSTANCE TAGS: %s\u0026#39; % (instance.tags))\r#------------------------------------\r## Isolate Instance\r#------------------------------------\rprint(\u0026#39;quarantining instance -- %s, %s\u0026#39; % (instance.id, instance.instance_type))\r# Change instance Security Group attribute to terminate connections and allow Forensics Team\u0026#39;s access\rinstance.modify_attribute(Groups=[os.environ[\u0026#39;IsolatedSG\u0026#39;]])\rprint(\u0026#39;Instance ready for root cause analysis -- %s, %s\u0026#39; % (instance.id, instance.security_groups))\r#------------------------------------\r## Create snapshots of EBS volumes #------------------------------------\rdescription= \u0026#39;Isolated Instance:\u0026#39; + instance.id + \u0026#39; on account: \u0026#39; + event[\u0026#39;detail\u0026#39;][\u0026#39;accountId\u0026#39;] + \u0026#39; on \u0026#39; + date.today().strftime(\u0026#34;%Y-%m-%d %H:%M:%S\u0026#34;)\rSnapShotDetails = client.create_snapshots(\rDescription=description,\rInstanceSpecification = {\r\u0026#39;InstanceId\u0026#39;: instanceID,\r\u0026#39;ExcludeBootVolume\u0026#39;: False\r}\r)\rprint(\u0026#39;Snapshot Created -- %s\u0026#39; % (SnapShotDetails))\rresponse = \u0026#39;Instance \u0026#39; + instance.id + \u0026#39; auto-remediated\u0026#39; except ClientError as e:\rprint(e)\rreturn response Tạo sự kiện test:\nDi chuột vào nút Test Chọn Configure test event Điền vào các ô những thông tin sau:\nTên sự kiện: GuardDutyViaCWE Dán đoạn code này vào Event JSON và thay đổi một số biến: Thay AccountID bắng số tài khoản của bạn. Thay thế Instance ID bằng ID của máy ảo BasicLinuxTarget được triển khai bởi CloudFormation. {\r\u0026#34;version\u0026#34;: \u0026#34;0\u0026#34;,\r\u0026#34;id\u0026#34;: \u0026#34;cd2d702e-ab31-411b-9344-793ce56b1bc7\u0026#34;,\r\u0026#34;detail-type\u0026#34;: \u0026#34;GuardDuty Finding\u0026#34;,\r\u0026#34;source\u0026#34;: \u0026#34;aws.guardduty\u0026#34;,\r\u0026#34;account\u0026#34;: \u0026#34;\u0026lt;\u0026lt;Account ID\u0026gt;\u0026gt;\u0026#34;,\r\u0026#34;time\u0026#34;: \u0026#34;1970-01-01T00:00:00Z\u0026#34;,\r\u0026#34;region\u0026#34;: \u0026#34;us-east-1\u0026#34;,\r\u0026#34;resources\u0026#34;: [],\r\u0026#34;detail\u0026#34;: {\r\u0026#34;schemaVersion\u0026#34;: \u0026#34;2.0\u0026#34;,\r\u0026#34;accountId\u0026#34;: \u0026#34;\u0026lt;\u0026lt;Account ID\u0026gt;\u0026gt;\u0026#34;,\r\u0026#34;region\u0026#34;: \u0026#34;us-east-1\u0026#34;,\r\u0026#34;partition\u0026#34;: \u0026#34;aws\u0026#34;,\r\u0026#34;id\u0026#34;: \u0026#34;b0baa89de4ab301f8d0a8c9a3dfd5726\u0026#34;,\r\u0026#34;arn\u0026#34;: \u0026#34;arn:aws:guardduty:us-east-1:\u0026lt;\u0026lt;Account ID\u0026gt;\u0026gt;:detector/feb3c048238f682b8902532ec100b3fb/finding/b0baa89de4ab301f8d0a8c9a3dfd5726\u0026#34;,\r\u0026#34;type\u0026#34;: \u0026#34;UnauthorizedAccess:EC2/TorClient\u0026#34;,\r\u0026#34;resource\u0026#34;: {\r\u0026#34;instanceDetails\u0026#34;: {\r\u0026#34;instanceId\u0026#34;: \u0026#34;\u0026lt;\u0026lt;Instance ID\u0026gt;\u0026gt;\u0026#34;\r}\r}\r}\r} Sự kiện thử nghiệm này là kết quả mô phỏng từ AWS GuardDuty, cho thấy quyền truy cập trái phép vào EC2 từ Tor client. Bấm vào nút Save Kiểm tra hàm Lambda Bấm vào nút Test, kết quả test thành công sẽ như thế này: Giải thích\nHàm Lambda này được thiết kế để tự động phản hồi phát hiện bảo mật liên quan đến phiên bản EC2. Đây là một bản tóm tắt ngắn gọn:\nHàm bắt đầu bằng cách thu thập ID phiên bản từ sự kiện CloudWatch. Sau đó nó lấy thông tin chi tiết về máy ảo bị xâm nhập bằng thư viện Boto3. Nếu phát hiện máy ảo bị xâm nhập, hàm Lambda này sẽ thực hiện một số bước khắc phục: Vô hiệu hóa khả năng bị xóa bỏ thông qua API. Đặt hành vi tắt máy của phiên bản thành \u0026ldquo;dừng\u0026rdquo; thay vì \u0026ldquo;chấm dứt\u0026rdquo;. Thêm thẻ (nhãn) vào máy ảo để cho biết phiên bản đó đang ở trạng thái cách ly. Điều chỉnh nhóm bảo mật của phiên bản để chấm dứt kết nối và cho phép nhóm điều tra truy cập. Tạo Snapshot EBS của máy ảo để phân tích điều tra. Nếu có bất kỳ sai sót nào xảy ra trong quá trình khắc phục sẽ được ghi lại. Hàm sẽ trả về phản hồi cho biết phiên bản đã được tự động khắc phục thành công hay xảy ra lỗi. Nhìn chung, chức năng này nhằm mục đích tự động phản hồi các phát hiện bảo mật bằng cách cách ly và lưu giữ bằng chứng khỏi phiên bản EC2 bị ảnh hưởng.\n"
},
{
	"uri": "//localhost:1313/vi/2-setupenvironment/2.3-ec2instance/",
	"title": "Kiểm tra trạng thái trước sự cố",
	"tags": [],
	"description": "",
	"content": "Ở bước này, chúng ta sẽ kiểm tra trạng thái của mọi dịch vụ được tạo trong ngăn xếp trước khi sự cố xảy ra.\nCó ba máy ảo EC2 được tạo. Máy ảo RedTeam sẽ là nơi ẩn náu của kẻ tấn công. Nó sẽ nhắm mục tiêu vào máy ảo BasicLinux để mô phỏng năm loại tấn công phổ biến. Kiểm tra cài đặt Ngăn chặn xóa bỏ của máy ảo RedTeam và BasicLinux. Bạn có thể thấy rằng tính năng Ngăn chặn xóa bỏ không được bật. Kiểm tra nhóm Bảo mật được chỉ định cho từng máy ảo EC2. Không có Snapshot EBS nào được tạo. "
},
{
	"uri": "//localhost:1313/vi/4-checkresult/",
	"title": "Kiểm tra kết quả",
	"tags": [],
	"description": "",
	"content": "Trong mô-đun này, chúng ta sẽ kiểm tra kết quả của Ứng phó sự cố tự động. Đợi khoảng 10-15 phút để xem kết quả cập nhật của GuardDuty.\nĐi tới bảng điều khiển GuardDuty và chọn Kết quả, bạn sẽ thấy có 5 CWE đã được GuardDuty phát hiện. Chúng sẽ tự động kích hoạt hàm Lambda để tách biệt và tạo Snapshot cho máy ảo EC2. Đi tới bảng điều khiển EC2\nKiểm tra Nhóm bảo mật của BasicLinuxTarget đã được đổi thành IsolatedSG. Kiểm tra Ngăn chặn xóa bỏ của BasicLinuxTarget và RedTeam, hiện tại chúng đã được kích hoạt để tránh bị xóa. Tìm đến phần Snapshots, một Snapshot EBS đã được tạo. Hệ thống ứng phó sự cố tự động đã hoàn thành nhiệm vụ thành công!\nNội dung Giới thiệu Cấu hình và cài đặt môi trường Thiết lập Hệ thống ứng phó Kiểm tra kết quả Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/3-configureresponse/3.4-eventbridge/",
	"title": "Tạo quy tắc EventBridge",
	"tags": [],
	"description": "",
	"content": "\rEventBridge là một dịch vụ serverless sử dụng các sự kiện để kết nối các thành phần ứng dụng với nhau, giúp bạn dễ dàng xây dựng các ứng dụng hướng sự kiện có thể mở rộng quy mô. EventBridge cung cấp những cách đơn giản và nhất quán để thu nạp, lọc, chuyển đổi và phân phối sự kiện để bạn có thể xây dựng ứng dụng một cách nhanh chóng. Đọc thêm về AWS EventBridge.\nTại Bảng điều khiển quản lý AWS\nTìm kiếm Event buses Chọn nó Trong bảng điều khiển EventBridge\nChọn Rules Bấm vào nút Create rule Trong trang Define rule detail\nTên: compromised-instance-remediation Mô tả: Kích hoạt ứng phó sự cố tự động Chọn Rule with an event pattern rồi chọn Next Để mọi thứ như mặc định và cuộn xuống cuối trang.\nChọn Custome pattern làm Creation method Tại Event pattern, dán đoạn code này: {\r\u0026#34;source\u0026#34;: [\u0026#34;aws.guardduty\u0026#34;],\r\u0026#34;detail\u0026#34;: {\r\u0026#34;type\u0026#34;: [\u0026#34;UnauthorizedAccess:EC2/TorClient\u0026#34;, \u0026#34;Backdoor:EC2/C\u0026amp;CActivity.B!DNS\u0026#34;, \u0026#34;Trojan:EC2/DNSDataExfiltration\u0026#34;, \u0026#34;CryptoCurrency:EC2/BitcoinTool.B\u0026#34;, \u0026#34;CryptoCurrency:EC2/BitcoinTool.B!DNS\u0026#34;]\r}\r} Nhấn Next Trong trang Select target: Chọn AWS Service. Chọn Lambda function. Chọn ec2-instance-containment-with-forensics mà chúng ta tạo ở bước 3.3. Chuyển đến trang cuối cùng và nhấp vào Create. "
},
{
	"uri": "//localhost:1313/vi/5-cleanup/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Xóa các tài nguyên theo thứ tự sau:\nBỏ chọn Ngăn chặn xóa bỏ của máy ảo BasicLinux và RedTeam. Xóa Snapshots. Xóa môi trường CloudFormation, quá trình này sẽ mất khoảng 10 phút để hoàn thành. Kiểm tra xem Amazon GuardDuty có bị tắt tự động hay bạn cần tắt nó theo cách thủ công. Vào bảng điều khiển GuardDuty Bấm vào Cài đặt (trên menu điều hướng bên trái) Cuộn xuống Nhấn Vô hiệu hóa GuardDuty Xóa luật EventBuses Xóa hàm Lambda Xóa Chính sách IAM, Vai trò IAM và nhóm Bảo mật biệt lập. "
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]